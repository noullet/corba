module interfaces {

	enum MessageType {
		BROADCAST, SINGLECAST
	};
	
	enum UserSize {
		NAIN, PETIT, MOYEN, GRAND, GEANT
	};
	
	enum UserMood {
		CONTENT, HILARE, TRISTE, INQUIET, EFFRAYE
	};
	
	enum UserSex {
		MALE, FEMALE
	};
	
	enum Orientation {
		NORTH, SOUTH, EAST, WEST
	};
	
	interface Room;

	struct User {
		string login;
		UserSize size;
		UserMood mood;
		UserSex sex;
		boolean isAdmin;
	};
		
	struct Message {
		string sender;
		string receiver;
		string content;
		long long timestamp;
		MessageType type;
	};
	
	typedef sequence<Room> Rooms;
	typedef sequence<User> Users;
	typedef sequence<Message> Messages;
	typedef sequence<string> Logins;
				
	struct LoginDTO {
		User user;
		Room room;
		Messages pendingMessages;
	};
	 	
	interface UserService {		
		void notifyMessage(in Message message);
		void notifyEnterRoom(in User user);
		void notifyLeaveRoom(in User user);
		void notifyLogin(in User user);
		void notifyLogout(in User user);
		void notifyChangeSize(in User user, in UserSize size);	
		void notifyChangeMood(in User user, in UserMood mood);	
		void notifyChangeSex(in User user, in UserSex sex);
		void kick();	
	};
	
	interface WorldManager {
		string register(in string login);
		LoginDTO login(in string login, in string password, in UserService userService);
	    Room changeRoom(in Room oldRoom, in User user, in Orientation orientation);
		void logout(in User user, in Room room);
		Users adminGetAllUsers(in string adminLogin, in string adminPassword);
		Users adminGetConnectedUsers(in string adminLogin, in string adminPassword);
		void adminKickUser(in string adminLogin, in string adminPassword, in User user);
		void adminInitialize(in string adminLogin, in string adminPassword);
	};
			
	interface Room {
		readonly attribute string name;
		readonly attribute Users allUsers;
		readonly attribute Logins connectedUsers;
			
		void sendMessage(in Message message);
		User changeSize(in User user, in UserSize size);	
		User changeMood(in User user, in UserMood mood);	
		User changeSex(in User user, in UserSex sex);
	};
	
};
