/**
 * This class is generated by jOOQ
 */
package server.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.6"},
                            comments = "This class is generated by jOOQ")
public class UserRecord extends org.jooq.impl.UpdatableRecordImpl<server.generated.tables.records.UserRecord> {

	private static final long serialVersionUID = -790512094;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(server.generated.tables.User.USER.ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(server.generated.tables.User.USER.ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<server.generated.tables.records.MessageRecord> fetchMessageListBySender() {
		return create()
			.selectFrom(server.generated.tables.Message.MESSAGE)
			.where(server.generated.tables.Message.MESSAGE.SENDER.equal(getValue(server.generated.tables.User.USER.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<server.generated.tables.records.MessageRecord> fetchMessageListByReceiver() {
		return create()
			.selectFrom(server.generated.tables.Message.MESSAGE)
			.where(server.generated.tables.Message.MESSAGE.RECEIVER.equal(getValue(server.generated.tables.User.USER.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 */
	public void setLogin(java.lang.String value) {
		setValue(server.generated.tables.User.USER.LOGIN, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getLogin() {
		return getValue(server.generated.tables.User.USER.LOGIN);
	}

	/**
	 * An uncommented item
	 */
	public void setPassword(java.lang.String value) {
		setValue(server.generated.tables.User.USER.PASSWORD, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getPassword() {
		return getValue(server.generated.tables.User.USER.PASSWORD);
	}

	/**
	 * An uncommented item
	 */
	public void setSize(java.lang.Integer value) {
		setValue(server.generated.tables.User.USER.SIZE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Integer getSize() {
		return getValue(server.generated.tables.User.USER.SIZE);
	}

	/**
	 * An uncommented item
	 */
	public void setMood(java.lang.Integer value) {
		setValue(server.generated.tables.User.USER.MOOD, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Integer getMood() {
		return getValue(server.generated.tables.User.USER.MOOD);
	}

	/**
	 * An uncommented item
	 */
	public void setSex(java.lang.Integer value) {
		setValue(server.generated.tables.User.USER.SEX, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Integer getSex() {
		return getValue(server.generated.tables.User.USER.SEX);
	}

	/**
	 * An uncommented item
	 */
	public void setAdmin(java.lang.Byte value) {
		setValue(server.generated.tables.User.USER.ADMIN, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Byte getAdmin() {
		return getValue(server.generated.tables.User.USER.ADMIN);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT fk_User_Room1
	 * FOREIGN KEY (room)
	 * REFERENCES vworld.room (id)
	 * </pre></code>
	 */
	public void setRoom(java.lang.Integer value) {
		setValue(server.generated.tables.User.USER.ROOM, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT fk_User_Room1
	 * FOREIGN KEY (room)
	 * REFERENCES vworld.room (id)
	 * </pre></code>
	 */
	public java.lang.Integer getRoom() {
		return getValue(server.generated.tables.User.USER.ROOM);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT fk_User_Room1
	 * FOREIGN KEY (room)
	 * REFERENCES vworld.room (id)
	 * </pre></code>
	 */
	public server.generated.tables.records.RoomRecord fetchRoom() {
		return create()
			.selectFrom(server.generated.tables.Room.ROOM)
			.where(server.generated.tables.Room.ROOM.ID.equal(getValue(server.generated.tables.User.USER.ROOM)))
			.fetchOne();
	}

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(server.generated.tables.User.USER);
	}
}
